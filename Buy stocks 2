https://practice.geeksforgeeks.org/problems/buy-stock-2/1

Sumeet sir solution

 long long maximumProfit(vector<long long>&A, int n) {
        // Code here
    long long ans=0;
        for(int i=0;i<n;i++){
            long long start=i;
            while(i+1<n&&A[i]<A[i+1]){
                 i++;
            }
            if(start!=i&&A[i]>A[start]){
                ans+= A[i]-A[start];
                }
        }
        return ans;
    }

striver solution

    long long helper(int ind, vector<long long> &prices, int buy,vector<vector<int>> &dp)
{
    if (ind == prices.size())
    {
        return 0;
    }
    if(dp[ind][buy]!=-1){
        return dp[ind][buy];
    }
  long long profit;
    if (buy == 1)
    {
        profit = max((-prices[ind] + helper(ind + 1, prices, 0,dp)), (helper(ind + 1, prices, 1,dp)));
    }
    else
    {
        profit = max(prices[ind] + helper(ind + 1, prices, 1,dp), helper(ind + 1, prices, 0,dp));
    }
    return dp[ind][buy]=profit;
}

long long maximumProfit(vector<long long> &prices, int n)
{
    // Code here
    vector<vector<int>>dp(n+1,vector<int>(2,-1));
    return helper(0, prices, 1,dp);
}
