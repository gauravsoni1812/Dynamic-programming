https://practice.geeksforgeeks.org/problems/minimum-sum-partition3317/1

https://youtu.be/-GtpxG6l_Mc  // solution


int minDifference(int arr[], int n) {
    int sum = 0;
    for (int i = 0; i < n; i++) {
        sum += arr[i];
    }

    std::vector<std::vector<bool>> dp(n + 1, std::vector<bool>(sum + 1));

    for (int i = 0; i <= sum; i++) {
        dp[0][i] = false;
    }

    for (int i = 0; i <= n; i++) {
        dp[i][0] = true;
    }

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= sum; j++) {
            if (arr[i - 1] > j) {
                dp[i][j] = dp[i - 1][j];
            }
            else {
                dp[i][j] = dp[i - 1][j] || dp[i - 1][j - arr[i - 1]];
            }
        }
    }

    int i = sum / 2;
    while (i >= 0) {
        if (dp[n][i] == true) {
            break;
        }
        i--;
    }

    return sum - 2 * i;
}




