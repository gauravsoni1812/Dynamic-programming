https://practice.geeksforgeeks.org/problems/count-all-possible-paths-from-top-left-to-bottom-right3011/1

const int MOD = 1000000007;

long long int helper(int i, int j, int m, int n, vector<vector<int>> &dp) {
    if (i == n - 1 && j == m - 1) {
        return 0;
    }
    if (i == n - 1 || j == m - 1) {
        return 1;
    }
    if (dp[i][j] != -1) {
        return dp[i][j];
    }
    return dp[i][j] = (helper(i, j + 1, m, n, dp) % MOD + helper(i + 1, j, m, n, dp) % MOD) % MOD;
}

long long int numberOfPaths(int m, int n) {
    vector<vector<int>> dp(n, vector<int>(m, -1));
    return helper(0, 0, m, n, dp);
}
