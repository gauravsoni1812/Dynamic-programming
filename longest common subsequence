https://practice.geeksforgeeks.org/problems/longest-common-subsequence-1587115620/1?page=2&difficulty%5B%5D=1&sortBy=submissions

int mem(int x, int y, string s1, string s2, int output[][1001])
{
    if (x == 0 || y == 0)
    {
        return 0;
    }
    if(output[x][y]!=-1){
         return output[x][y];
    }
    if (s1[0] == s2[0])
    {
        return 1 + mem(x - 1, y - 1, s1.substr(1), s2.substr(1), output);
    }
    int a = mem(x - 1, y, s1.substr(1), s2, output);
    int b = mem(x, y - 1, s1, s2.substr(1), output);
    return output[x][y]= max(a, b);
}

int lcs(int x, int y , string s1, string s2){
    
    int output[1001][1001];
  for(int i=0;i<=x;i++){
      for(int j=0;j<=y;j++){
           if(i==0){
               output[i][j]=0;
           }
           if(j==0){
               output[i][j]=0;
           }
      }
  }
    for(int i=1;i<=x;i++){
       for(int j=1;j<=y;j++){
            if(s1[i-1]==s2[j-1]){
                 output[i][j]=1+output[i-1][j-1];
            }else{
                output[i][j]=max(output[i-1][j],output[i][j-1]);
            }
       }
    } 
    return output[x][y];
}
// int lcs(int x, int y , string s1, string s2){
    
//     int output[1001][1001];
//     for(int i=0;i<x+1;i++){
//         output[i][0]=0;
//     }
//     for(int j=0;j<y+1;j++){
//         output[0][j]=0;
//     }
//     for(int i=1;i<=x;i++){
//       for(int j=1;j<=y;j++){
//             if(s1[i-1]==s2[j-1]){
//                  output[i][j]=1+output[i-1][j-1];
//             }else{
//                 output[i][j]=max(output[i-1][j],output[i][j-1]);
//             }
//       }
//     } 
//     return output[x][y];
// }
