https://practice.geeksforgeeks.org/problems/burst-balloons/0

  int helper(int i, int j, vector<int> &arr, vector<vector<int>> &dp)
{
    if (i > j)
    {
        return 0;
    }
    if (dp[i][j] != -1)
    {
        return dp[i][j];
    }
    int ans = INT_MIN;

    for (int k = i; k <= j; k++)
    {
        int cost = arr[i - 1] * arr[j + 1] * arr[k] + helper(i, k - 1, arr,dp) + helper(k + 1, j, arr,dp);
        ans = max(ans, cost);
    }
    return dp[i][j] = ans;
}
int maxCoins(int N, vector<int> &arr)
{
    // code here
    vector<vector<int>> dp(N+1, vector<int>(N+1, -1));
    arr.push_back(1);
    arr.insert(arr.begin(), 1);
    return helper(1, N, arr, dp);
}
