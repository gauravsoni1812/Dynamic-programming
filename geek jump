https://practice.geeksforgeeks.org/problems/geek-jump/1

  int minimumEnergy(vector<int> &arr, int n)
{
    // Code here
    //   if(n=<1){
    //      return 0;
    //   }
    //   if(n==2){
    //     return abs(dp[1]-dp[0])
    //   }
    //   if(n==3){
    //      return min(abs(arr[1]-arr[0])+abs(arr[1]-arr[2]),abs(arr[0]-arr[2]));
    //   }
    //     //jump karaya ek stair
    //     int a=abs(arr[n-1]-arr[n-2])+helper(height,n-1);
    //     int b=abs(arr[n-1]-arr[n-3])+helper(height,n-2);
    //     return min(a, b);
    vector<int> dp(n + 1, 0);
    dp[0] = 0;
    dp[1] = 0;
    dp[2] = abs(arr[0] - arr[1]);
    dp[3] = min(abs(arr[1] - arr[0]) + abs(arr[1] - arr[2]), abs(arr[0] - arr[2]));
    for (int i = 4; i <= n; i++)
    {
        dp[i] = min(dp[i - 1] + abs(arr[i - 1] - arr[i - 2]), dp[i - 2] + abs(arr[i - 1] - arr[i - 3]));
    }
    return dp[n];
}
